"use strict";var C=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var G=C(function(Cr,mr){mr.exports={dims:null,keepdims:!1}});var J=C(function(Pr,H){"use strict";var vr=require("@stdlib/assert-is-plain-object"),N=require("@stdlib/assert-has-own-property"),pr=require("@stdlib/assert-is-boolean").isPrimitive,hr=require("@stdlib/assert-is-integer-array").primitives,lr=require("@stdlib/assert-is-empty-collection"),fr=require("@stdlib/ndarray-base-to-unique-normalized-indices"),U=require("@stdlib/array-base-join"),gr=require("@stdlib/array-base-assert-contains"),D=require("@stdlib/string-format");function yr(r,e,a,n){var o;if(!vr(n))return new TypeError(D("invalid argument. Options argument must be an object. Value: `%s`.",n));if(N(n,"keepdims")&&(r.keepdims=n.keepdims,!pr(r.keepdims)))return new TypeError(D("invalid option. `%s` option must be a boolean. Option: `%s`.","keepdims",r.keepdims));if(N(n,"dims")){if(r.dims=n.dims,!hr(r.dims)&&!lr(r.dims))return new TypeError(D("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(o=fr(r.dims,e-1),o===null)return new RangeError(D("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",U(r.dims,",")));if(o.length!==r.dims.length)return new Error(D("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",U(r.dims,",")));r.dims=o}return N(n,"dtype")&&(r.dtype=n.dtype,!gr(a,r.dtype))?new TypeError(D('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",U(a,'", "'),r.dtype)):null}H.exports=yr});var Q=C(function(Rr,K){"use strict";function cr(r,e,a,n,o,d,g,s,b){var c,q,v,p;for(c=d,v=0;v<r;v++){for(q=b,p=0;p<e&&a[c+p*o]===g[q];p++)q+=s;if(p===e)return v;c+=n}return-1}K.exports=cr});var dr=C(function(xr,or){"use strict";var rr=require("@stdlib/utils-define-nonenumerable-read-only-property"),W=require("@stdlib/assert-has-property"),O=require("@stdlib/assert-is-ndarray-like"),X=require("@stdlib/assert-is-object"),wr=require("@stdlib/assert-is-function"),P=require("@stdlib/assert-is-collection"),Y=require("@stdlib/assert-is-empty-collection"),br=require("@stdlib/assert-is-function-array"),Z=require("@stdlib/ndarray-base-assert-is-data-type"),qr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),Er=require("@stdlib/ndarray-base-assert-is-input-casting-policy"),V=require("@stdlib/array-base-assert-contains"),er=require("@stdlib/ndarray-base-binary-reduce-strided1d"),Tr=require("@stdlib/ndarray-base-binary-output-dtype"),R=require("@stdlib/ndarray-base-binary-input-casting-dtype"),I=require("@stdlib/ndarray-base-dtype-resolve-enum"),_r=require("@stdlib/ndarray-base-spread-dimensions"),x=require("@stdlib/ndarray-shape"),jr=require("@stdlib/ndarray-ndims"),j=require("@stdlib/ndarray-base-dtype"),B=require("@stdlib/ndarray-base-order"),$=require("@stdlib/ndarray-base-assign"),L=require("@stdlib/ndarray-base-empty"),kr=require("@stdlib/ndarray-empty"),Fr=require("@stdlib/array-base-indices-complement"),Dr=require("@stdlib/array-base-take-indexed"),ar=require("@stdlib/array-base-zero-to"),E=require("@stdlib/array-base-join"),Or=require("@stdlib/array-base-copy"),tr=require("@stdlib/array-base-insert-at"),M=require("@stdlib/array-base-every-by"),ir=require("@stdlib/object-assign"),i=require("@stdlib/string-format"),Vr=require("@stdlib/ndarray-defaults"),nr=G(),sr=J(),ur=Q(),Sr=Vr.get("order");function Ar(r){var e,a;for(e=[],a=0;a<r.length;a++)e.push(I(r[a]));return e}function z(r,e,a,n){var o,d;if(!(this instanceof z))return new z(r,e,a,n);if(!X(r))throw new TypeError(i("invalid argument. First argument must be an object. Value: `%s`.",r));if(!wr(r.default))throw new TypeError(i('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(W(r,"types")&&!P(r.types)&&!Y(r.types))throw new TypeError(i('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(W(r,"fcns")&&!br(r.fcns)&&!Y(r.fcns))throw new TypeError(i('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!P(e))throw new TypeError(i("invalid argument. Second argument must be an array-like object. Value: `%s`.",e));for(d=0;d<e.length;d++)if(o=e[d],!P(o)||o.length<1||!M(o,Z))throw new TypeError(i("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",e));if(!P(a)||a.length<1||!M(a,Z))throw new TypeError(i("invalid argument. Third argument must be an array of data types. Value: `%s`.",a));if(!X(n))throw new TypeError(i("invalid argument. Fourth argument must be an object. Value: `%s`.",r));if(!qr(n.output))throw new TypeError(i("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",n.output));if(!Er(n.casting))throw new TypeError(i("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",n.casting));if(this._table={default:r.default,types:r.types?Ar(r.types):[],fcns:r.fcns?Or(r.fcns):[]},this._table.types.length!==2*this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. Two input ndarray data types must be specified for each provided strided function.");return this._idtypes=e,this._odtypes=a,this._policies={output:n.output,casting:n.casting},this}rr(z.prototype,"apply",function(e,a){var n,o,d,g,s,b,c,q,v,p,m,h,k,w,u,l,y,T,t,_,F,S,f,A;if(d=arguments.length,!O(e))throw new TypeError(i("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(!O(a))throw new TypeError(i("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",a));if(l=j(e),!V(this._idtypes[0],l))throw new TypeError(i('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',E(this._idtypes[0],'", "'),l));if(y=j(a),!V(this._idtypes[1],y))throw new TypeError(i('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',E(this._idtypes[1],'", "'),y));for(g=[e,a],f=2;f<d&&(w=arguments[f],!!O(w));f++){if(t=j(w),!V(this._idtypes[f],t))throw new TypeError(i('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',f,E(this._idtypes[f],'", "'),t));g.push(w)}if(f<d-1)throw new TypeError(i("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",f,arguments[f]));if(m=x(e),h=x(a),m.length!==h.length)throw new Error(i("invalid argument. Input arrays must have the same number of dimensions. First array dimensions: %d. Second array dimensions: %d.",m.length,h.length));for(F=m.length,A=0;A<F;A++)if(m[A]!==h[A])throw new Error(i("invalid argument. Input arrays must have the same shape. First array shape: [%s]. Second array shape: [%s].",E(m,","),E(h,",")));if(s=ir({},nr),d>f&&(n=arguments[d-1],v=sr(s,F,this._odtypes,n),v))throw v;return s.dims===null&&(s.dims=ar(F)),p=Fr(F,s.dims),k=Dr(m,p),b=B(e),c=B(a),b===c?q=b:q=Sr,T=s.dtype||Tr(l,y,this._policies.output),S=kr(k,{dtype:T,order:q}),t=R(l,y,T,this._policies.casting),l!==t&&(u=L(t,m,b),$([e,u]),g[0]=u,l=t),t=R(y,l,T,this._policies.casting),y!==t&&(u=L(t,h,c),$([a,u]),g[1]=u,y=t),o=[I(l),I(y)],f=ur(this._table.fcns.length,2,this._table.types,2,1,0,o,1,0),f>=0?_=this._table.fcns[f]:_=this._table.default,er(_,tr(g,2,S),s.dims),s.keepdims&&(S=_r(F,S,p)),S});rr(z.prototype,"assign",function r(e,a){var n,o,d,g,s,b,c,q,v,p,m,h,k,w,u,l,y,T,t,_;if(d=arguments.length,!O(e))throw new TypeError(i("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(!O(a))throw new TypeError(i("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",a));if(m=j(e),!V(this._idtypes[0],m))throw new TypeError(i('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',E(this._idtypes[0],'", "'),m));if(h=j(a),!V(this._idtypes[1],h))throw new TypeError(i('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',E(this._idtypes[1],'", "'),h));if(v=x(e),p=x(a),v.length!==p.length)throw new Error(i("invalid argument. Input arrays must have the same number of dimensions. First array dimensions: %d. Second array dimensions: %d.",v.length,p.length));for(l=v.length,_=0;_<l;_++)if(v[_]!==p[_])throw new Error(i("invalid argument. Input arrays must have the same shape. First array shape: [%s]. Second array shape: [%s].",E(v,","),E(p,",")));for(s=[e,a],t=2;t<d&&(b=arguments[t],!!O(b));t++)s.push(b);if(t<3)throw new TypeError(i("invalid argument. Third argument must be an ndarray-like object. Value: `%s`.",arguments[2]));if(t===d-1)n=arguments[t],q=!0;else if(t<d-1)throw new TypeError(i("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));for(T=s.pop(),t=2;t<s.length;t++)if(u=j(s[t]),!V(this._idtypes[t],u))throw new TypeError(i('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,E(this._idtypes[t],'", "'),u));if(l=jr(e),g=ir({},nr),q&&(c=sr(g,l,this._odtypes,n),c))throw c;return g.dims===null&&(g.dims=ar(l)),k=j(T),u=R(m,h,k,this._policies.casting),m!==u&&(w=L(u,v,B(e)),r([e,w]),s[0]=w,m=u),u=R(h,m,k,this._policies.casting),h!==u&&(w=L(u,p,B(a)),r([a,w]),s[1]=w,h=u),o=[I(m),I(h)],t=ur(this._table.fcns.length,2,this._table.types,2,1,0,o,1,0),t>=0?y=this._table.fcns[t]:y=this._table.default,er(y,tr(s,2,T),g.dims),T});or.exports=z});var Ir=dr();module.exports=Ir;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
