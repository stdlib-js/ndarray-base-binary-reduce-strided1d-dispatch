// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-empty-collection@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function-array@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-output-data-type-policy@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-input-casting-policy@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-binary-reduce-strided1d@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-binary-output-dtype@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-binary-input-casting-dtype@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-resolve-enum@v0.2.2-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-spread-dimensions@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ndims@v0.2.2-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype@v0.2.2-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-order@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assign@v0.1.1-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-empty@v0.3.0-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-indices-complement@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take-indexed@v0.2.2-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zero-to@v0.2.1-esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-copy@v0.2.2-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-every-by@v0.2.2-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.2-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import I from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.3.0-esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import{isPrimitive as q}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{primitives as L}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer-array@v0.2.2-esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-to-unique-normalized-indices@esm/index.mjs";var B={dims:null,keepdims:!1};function C(e,t,s,r){var i;if(!O(r))return new TypeError(A("null2V",r));if(z(r,"keepdims")&&(e.keepdims=r.keepdims,!q(e.keepdims)))return new TypeError(A("null2o","keepdims",e.keepdims));if(z(r,"dims")){if(e.dims=r.dims,!L(e.dims)&&!a(e.dims))return new TypeError(A("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",e.dims));if(null===(i=R(e.dims,t-1)))return new RangeError(A("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",F(e.dims,",")));if(i.length!==e.dims.length)return new Error(A("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",F(e.dims,",")));e.dims=i}return z(r,"dtype")&&(e.dtype=r.dtype,!l(s,e.dtype))?new TypeError(A("null4S","dtype",F(s,'", "'),e.dtype)):null}function G(e,t,s,r,i,n,a,d,o){var m,p,l,h;for(m=n,l=0;l<e;l++){for(p=o,h=0;h<t&&s[m+h*i]===a[p];h++)p+=d;if(h===t)return l;m+=r}return-1}var H=I.get("order");function J(e){var t,s;for(t=[],s=0;s<e.length;s++)t.push(f(e[s]));return t}function K(e,t){var s,r,i;for(s=[],r=0,i=0;r<=e.length;r++)2===r?s.push(t):(s.push(e[i]),i+=1);return s}function M(e,s,l,h){var u,y;if(!(this instanceof M))return new M(e,s,l,h);if(!r(e))throw new TypeError(A("null3L",e));if(!i(e.default))throw new TypeError(A('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(t(e,"types")&&!n(e.types)&&!a(e.types))throw new TypeError(A('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(t(e,"fcns")&&!d(e.fcns)&&!a(e.fcns))throw new TypeError(A('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!n(s))throw new TypeError(A("null2y",s));for(y=0;y<s.length;y++)if(u=s[y],!n(u)||u.length<1||!V(u,o))throw new TypeError(A("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",s));if(!n(l)||l.length<1||!V(l,o))throw new TypeError(A("invalid argument. Third argument must be an array of data types. Value: `%s`.",l));if(!r(h))throw new TypeError(A("null43",e));if(!m(h.output))throw new TypeError(A("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",h.output));if(!p(h.casting))throw new TypeError(A("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",h.casting));if(this._table={default:e.default,types:e.types?J(e.types):[],fcns:e.fcns?S(e.fcns):[]},this._table.types.length!==2*this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. Two input ndarray data types must be specified for each provided strided function.");return this._idtypes=s,this._odtypes=l,this._policies={output:h.output,casting:h.casting},this}e(M.prototype,"apply",(function(e,t){var r,i,n,a,d,o,m,p,j,S,V,I,O,z,q,L,R,J,M,N,P,Q,U,W;if(n=arguments.length,!s(e))throw new TypeError(A("null5t",e));if(!s(t))throw new TypeError(A("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",t));if(L=v(e),!l(this._idtypes[0],L))throw new TypeError(A('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',F(this._idtypes[0],'", "'),L));if(R=v(t),!l(this._idtypes[1],R))throw new TypeError(A('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',F(this._idtypes[1],'", "'),R));for(a=[e,t],U=2;U<n&&s(z=arguments[U]);U++){if(M=v(z),!l(this._idtypes[U],M))throw new TypeError(A('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',U,F(this._idtypes[U],'", "'),M));a.push(z)}if(U<n-1)throw new TypeError(A("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",U,arguments[U]));if(V=c(e),I=c(t),V.length!==I.length)throw new Error(A("invalid argument. Input arrays must have the same number of dimensions. First array dimensions: %d. Second array dimensions: %d.",V.length,I.length));for(P=V.length,W=0;W<P;W++)if(V[W]!==I[W])throw new Error(A("invalid argument. Input arrays must have the same shape. First array shape: [%s]. Second array shape: [%s].",F(V,","),F(I,",")));if(d=D({},B),n>U&&(r=arguments[n-1],j=C(d,P,this._odtypes,r)))throw j;return null===d.dims&&(d.dims=k(P)),S=_(P,d.dims),O=T(V,S),p=(o=b(e))===(m=b(t))?o:H,J=d.dtype||u(L,R,this._policies.output),Q=E(O,{dtype:J,order:p}),L!==(M=y(L,R,J,this._policies.casting))&&(q=x(M,V,o),w([e,q]),a[0]=q,L=M),R!==(M=y(R,L,J,this._policies.casting))&&(q=x(M,I,m),w([t,q]),a[1]=q,R=M),i=[f(L),f(R)],N=(U=G(this._table.fcns.length,2,this._table.types,2,1,0,i,1,0))>=0?this._table.fcns[U]:this._table.default,h(N,K(a,Q),d.dims),d.keepdims&&(Q=g(P,Q,S)),Q})),e(M.prototype,"assign",(function e(t,r){var i,n,a,d,o,m,p,u,g,w,E,_,T,S,V,I,O,z,q,L;if(a=arguments.length,!s(t))throw new TypeError(A("null5t",t));if(!s(r))throw new TypeError(A("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",r));if(E=v(t),!l(this._idtypes[0],E))throw new TypeError(A('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',F(this._idtypes[0],'", "'),E));if(_=v(r),!l(this._idtypes[1],_))throw new TypeError(A('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',F(this._idtypes[1],'", "'),_));if(g=c(t),w=c(r),g.length!==w.length)throw new Error(A("invalid argument. Input arrays must have the same number of dimensions. First array dimensions: %d. Second array dimensions: %d.",g.length,w.length));for(I=g.length,L=0;L<I;L++)if(g[L]!==w[L])throw new Error(A("invalid argument. Input arrays must have the same shape. First array shape: [%s]. Second array shape: [%s].",F(g,","),F(w,",")));for(o=[t,r],q=2;q<a&&s(m=arguments[q]);q++)o.push(m);if(q<3)throw new TypeError(A("invalid argument. Third argument must be an ndarray-like object. Value: `%s`.",arguments[2]));if(q===a-1)i=arguments[q],u=!0;else if(q<a-1)throw new TypeError(A("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",q,arguments[q]));for(z=o.pop(),q=2;q<o.length;q++)if(V=v(o[q]),!l(this._idtypes[q],V))throw new TypeError(A('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',q,F(this._idtypes[q],'", "'),V));if(I=j(t),d=D({},B),u&&(p=C(d,I,this._odtypes,i)))throw p;return null===d.dims&&(d.dims=k(I)),T=v(z),E!==(V=y(E,_,T,this._policies.casting))&&(e([t,S=x(V,g,b(t))]),o[0]=S,E=V),_!==(V=y(_,E,T,this._policies.casting))&&(e([r,S=x(V,w,b(r))]),o[1]=S,_=V),n=[f(E),f(_)],O=(q=G(this._table.fcns.length,2,this._table.types,2,1,0,n,1,0))>=0?this._table.fcns[q]:this._table.default,h(O,K(o,z),d.dims),z}));export{M as default};
//# sourceMappingURL=index.mjs.map
